{"version":3,"sources":["../../styles/_basic.scss","../../styles/index.scss","../../styles/_variables.scss","../../styles/_mixins.scss"],"names":[],"mappings":"AAAA,EACI,qBAAA,CAGJ,KACI,WAAA,CACA,+BAAA,CCIJ,KACI,wBCXY,CDehB,WACI,gBAAA,CACA,kBAAA,CACA,WAAA,CAGI,gBAAA,CACA,kBAAA,CACA,oBCtBQ,CDuBR,kBAAA,CAGJ,0BACI,UAAA,CACA,WAAA,CE5BJ,YAAA,CACA,sBFiC2B,CEhC3B,kBFgCmC,CE/BnC,cF+B2C,CAK/C,QEvCI,YAAA,CACA,6BFyCuB,CExCvB,kBFwCsC,CEvCtC,cFuC8C,CElC1C,cACI,aAAA,CACA,WFkCc,CEjCd,YFiCqB,CE/BrB,qBAAA,CALJ,iBACI,aAAA,CACA,WFkCc,CEjCd,YFiCqB,CE/BrB,qBAAA,CALJ,aACI,aAAA,CACA,WFkCc,CEjCd,YFiCqB,CE/BrB,qBAAA","file":"index.min.css","sourcesContent":["* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 1rem;\n    font-family: 'Roboto', sans-serif;\n}","@use 'importer' as module;\n\n@use 'sass:color';\n@use 'sass:math';\n@use 'sass:string';\n\n// ПОКАЗАТЬ КОНФЛИКТ\n// @import 'variables-test1';\n// @import 'variables-test2';\n\nbody {\n    background-color: module.$main__color_1;    \n    // color: $test-color;\n}\n\n.container {\n    max-width: 1400px;\n    margin: 0 auto 20px;\n    padding: 1em;\n    // border: 1px solid v.$main__color_2;\n    border: {\n        width: 2px;\n        style: solid;\n        color: module.$main__color_2;\n        radius: 10px;\n    }\n\n    .cards-wrapper {\n        width: 100%;\n        height: 100%;\n\n        // display: flex;\n        // justify-content: center;\n        // align-items: center;\n        // flex-wrap: wrap;\n        @include module.d-flex(center, center, wrap);\n    }\n}\n\n// example usage\n.blocks {\n    // @extend .container;\n\n    @include module.d-flex(space-between, center, wrap);\n   \n    @include module.order(150px, 150px, \".name\", \".address\", \".zip\");\n}","$main__color_1: #EFEAD8;\n$main__color_2: #c4d8c7;\n$main__color_3: #6D8B74;\n$main__color_4: #D0C9C0;\n$main__color_5: #e3a350;\n$main__color_6: #F47C7C;\n\n$media_776: 776px;","@mixin d-flex($justify: start, $align: start, $wrap: no-wrap) {\n    display: flex;\n    justify-content: $justify;\n    align-items: $align;\n    flex-wrap: $wrap;\n}\n\n@mixin order($width, $height, $selectors...) {\n    @for $i from 0 to length($selectors) {\n        #{nth($selectors, $i + 1)} {\n            display: block;\n            width: $width;\n            height: $height;\n            // margin-top: $i * $height;\n            border: 1px solid #000;\n        }\n    }\n}"]}