version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: ./vendor/beeralex/compose/src/_docker/nginx/Dockerfile
      args:
        USERGROUP: '${USERGROUP}'
        DOCKER_PATH: ./vendor/beeralex/compose/src/_docker
    volumes:
      - ./:/var/www
      - ./vendor/beeralex/compose/src/_docker/nginx/conf.d/:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - compose
    container_name: nginx
  app:
    build:
      context: .
      dockerfile: ./vendor/beeralex/compose/src/_docker/app/php-8.2/Dockerfile
      args:
        USERGROUP: '${USERGROUP}'
        DOCKER_PATH: ./vendor/beeralex/compose/src/_docker
    volumes:
      - ./:/var/www
      #ssh- ~/.ssh:/root/.ssh
      - ./vendor/beeralex/compose/src/_docker/app/php-8.2/php.ini:/usr/local/etc/php/conf.d/php.ini
      #xdebug- ./vendor/beeralex/compose/src/_docker/app/php-8.2/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./vendor/beeralex/compose/src/_docker/app/php-fpm.conf:/usr/local/etc/php-fpm.d/zzzzwww.conf
      - ./vendor/beeralex/compose/src/_docker/app/nginx.conf:/etc/nginx/conf.d/nginx.conf
    ports:
      - "9000:9000"
    depends_on:
      - mysql
    environment:
        DOCKER_PATH: ./vendor/beeralex/compose/src/_docker
    extra_hosts:
      - host.docker.internal:host-gateway
    #xdebug    PHP_IDE_CONFIG: 'serverName=xdebugServer'
    #xdebug    XDEBUG_TRIGGER: testTrig
    #ssh secrets:
    #ssh   - host_ssh_key
    networks:
      - compose
    container_name: app
  mysql:
    image: mysql:5.7
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
      - ./vendor/beeralex/compose/src/_docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: site
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 8102:3306
    networks:
      - compose
    container_name: mysql
  node:
    build:
      context: .
      dockerfile: ./vendor/beeralex/compose/src/_docker/node/Dockerfile
      args:
        USERGROUP: '${USERGROUP}'
        NODE_VERSION: '20'
        NODE_PATH: '/var/www/'
    volumes:
      - ./:/var/www
    ports:
      - "5173:5173"
      - "5174:5174"
    depends_on:
      - app
    networks:
      - compose
    command: tail -f /dev/null
    #command: sh -c "pm2 start /var/www//server.js --name node-server & tail -f /dev/null"
    container_name: node
networks:
  compose:
    driver: bridge
volumes:
  mysql_data:
#sshsecrets:
#ssh  host_ssh_key:
#ssh    file: ~/.ssh/file.ppk
